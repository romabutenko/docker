version: '3'

services:
  ### DOCKER-WEB-UI ################################################
  #  docker-web-ui:
  #    build:
  #      context: ./docker-web-ui
  #    environment:
  #      - TZ=${WORKSPACE_TIMEZONE}
  #      - ENV_DOCKER_REGISTRY_HOST=${DOCKER_WEBUI_REGISTRY_HOST}
  #      - ENV_DOCKER_REGISTRY_PORT=${DOCKER_WEBUI_REGISTRY_PORT}
  #      - ENV_DOCKER_REGISTRY_USE_SSL=${DOCKER_REGISTRY_USE_SSL}
  #      - ENV_MODE_BROWSE_ONLY=${DOCKER_REGISTRY_BROWSE_ONLY}
  #    volumes:
  #      - /etc/localtime:/etc/localtime:ro
  #    ports:
  #      - "${DOCKER_WEBUI_PORT}:9090"
  #    networks:

  #  web:
  #    build:
  #      context: ./build-web
  #      dockerfile: /Dockerfile
  #      args:
  #        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
  #        - WEB_REPO=${WEB_REPO}
  #        - WEB_CONTAINER_PATH=${WEB_CONTAINER_PATH}
  #        - STAGE=${STAGE}
  #        - BRANCH=${BRANCH}
  #    env_file:
  #      - ./.env
  #    networks:
  #      - frontend
  #    volumes:
  #      - ../${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      args:
        - PRODUCTION=false
        - STAGE=${STAGE}
    volumes:
      - ${API_SOURCE_PATH}:${API_CONTAINER_PATH}
      - ${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}
    depends_on:
      - workspace

  ### NGINX Server #########################################
  nginx:
    build:
      args:
        - PRODUCTION=false
        - STAGE=${STAGE}
    volumes:
      - ${API_SOURCE_PATH}:${API_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
      - ${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    depends_on:
      - php-fpm


  ### Workspace Utilities ##################################
  workspace:
    build:
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PALANTIR_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}
        - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}
        - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
        - INSTALL_XSL=${WORKSPACE_INSTALL_XSL}
        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
        - INSTALL_CASSANDRA=${WORKSPACE_INSTALL_CASSANDRA}
        - INSTALL_GEARMAN=${WORKSPACE_INSTALL_GEARMAN}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
        - NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
        - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}
        - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
        - INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}
        - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
        - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
        - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}
        - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
        - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
        - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
        - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
        - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
        - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
        - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
        - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
        - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
        - INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
        - INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}
        - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}
        - INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}
        - INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${WORKSPACE_INSTALL_PING}
        - INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}
        - INSTALL_YAML=${WORKSPACE_INSTALL_YAML}
        - INSTALL_MAILPARSE=${WORKSPACE_INSTALL_MAILPARSE}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}
        - INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}
        - INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}
        - http_proxy
        - https_proxy
        - no_proxy
        - WEB_SOURCE_PATH=${WEB_SOURCE_PATH}
        - API_SOURCE_PATH=${API_SOURCE_PATH}
        - API_CONTAINER_PATH=${API_CONTAINER_PATH}
        - WEB_CONTAINER_PATH=${WEB_CONTAINER_PATH}
    volumes:
      - ${API_SOURCE_PATH}:${API_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
      - ${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
      - "${COMPOSE_PROJECT_NAME}.local:0.0.0.0"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
      - 8080:8080
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
    networks:
      - frontend
      - backend
    links:
      - did

  #  ### PHP Worker ############################################
  #  php-worker:
  #    build:
  #      context: ./php-worker
  #      args:
  #        - CHANGE_SOURCE=${CHANGE_SOURCE}
  #        - PHP_VERSION=${PHP_VERSION}
  #        - PHALCON_VERSION=${PHALCON_VERSION}
  #        - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
  #        - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}
  #        - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}
  #        - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}
  #        - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
  #        - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}
  #        - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}
  #        - INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}
  #        - INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}
  #        - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}
  #        - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}
  #        - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}
  #        - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
  #        - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}
  #        - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
  #        - PUID=${PHP_WORKER_PUID}
  #        - PGID=${PHP_WORKER_PGID}
  #    volumes:
  #      - ${API_SOURCE_PATH}:${API_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
  #      - ${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}${APP_CODE_CONTAINER_FLAG}
  #      - ./php-worker/supervisord.d:/etc/supervisord.d
  #    depends_on:
  #      - workspace
  #    extra_hosts:
  #      - "dockerhost:${DOCKER_HOST_IP}"
  #    networks:
  #      - backend


  ### Docker-in-Docker ################################################
  did:
    image: docker:dind
    build:
      context: .
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${API_SOURCE_PATH}:${API_CONTAINER_PATH}
      - ${WEB_SOURCE_PATH}:${WEB_CONTAINER_PATH}
      - ${DATA_PATH_HOST}/dind:/var/lib/docker
      - ${ENTRYPOINTS_PATH}:/docker-entrypoints
    expose:
      - 2375
    #    entrypoint: ["/bin/sh", "/docker-entrypoints/startup.sh"]
    #    env_file:
    #      - ./.env
    networks:
      - backend
      - frontend
